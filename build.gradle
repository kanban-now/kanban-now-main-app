buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
//apply plugin: 'maven'
apply plugin: 'spring-boot'

archivesBaseName = 'kanban-now-main-app'

group = 'main'
version = '0.1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile group: 'com.stormpath.spring', name: 'stormpath-webmvc-spring-boot-starter', version:'1.0.RC8'
    runtime group: 'com.stormpath.spring', name: 'stormpath-thymeleaf-spring-boot-starter', version:'1.0.RC8'

    compile 'com.netflix.feign:feign-core:8.15.0'
    compile 'com.netflix.feign:feign-gson:8.15.0'


    testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.1.5'
    testCompile group: 'org.codehaus.groovy.modules.http-builder', name: 'http-builder', version: '0.7.1'
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'

}


sourceSets {
    integrationTest {
        java {
            srcDirs = ['src/main/java']
        }

        groovy {
            srcDirs = ['src/integrationTest/groovy']
        }

        resources.srcDir file('src/integrationTest/resources')
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + compileClasspath
    }
}


task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    systemProperties = System.properties
}


task writeCloudFoundryManifest(type: Copy) {
    from 'cloud-foundry'
    into "${buildDir}"
    include 'manifest.yml.template'
    rename { file -> 'manifest.yml' }
    expand([
            stormpath_apiKey_id: "$System.env.stormpath_apiKey_id",
            stormpath_apiKey_secret: "$System.env.stormpath_apiKey_secret",
            stormpath_application_href: "$System.env.stormpath_application_href",
            deployment_environment: "$System.env.deployment_environment",
            kanban_now_services_apiKey_id: "$System.env.kanban_now_services_apiKey_id",
            kanban_now_services_apiKey_secret: "$System.env.kanban_now_services_apiKey_secret",
            archive_card_service_base_url: "$System.env.archive_card_service_base_url",

    ])
}


//task cfPush(dependsOn:[writeCloudFoundryManifest,cfLogin], type:Exec){
task cfPush(dependsOn:[], type:Exec){
    commandLine "cf","push","-f","${buildDir}/manifest.yml"
}
